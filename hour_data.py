# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VtadTSR1ZNNzMBPUl-UTKCCADxWIZxf8
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

#data
df = pd.read_csv('./src/restaurant-1-orders.csv', delimiter=',')

myDict1 = {}
id = []

for row in df['Item Name']:
    myDict1[row] = 0

items = list(myDict1.keys())


for i in range(len(items)):
  df['Item Name'] = df['Item Name'].replace(items[i], items[i%20])

myDict1 = {}

for row in df['Item Name']:
    myDict1[row] = 0

items = list(myDict1.keys())


names_dict = {}

for i, name in enumerate(items):
  names_dict[name] = i


for row in df['Item Name']:
    id.append(names_dict[row])
df['Item Id'] = id

df['Order Date'] = pd.to_datetime(df['Order Date'],dayfirst = True)
df['Hour'] = df['Order Date'].dt.hour
df['Minute'] = df['Order Date'].dt.minute
df['Day'] = df['Order Date'].dt.day
df['Month'] = df['Order Date'].dt.month
df['Year'] = df['Order Date'].dt.year
df['Weekday'] = df['Order Date'].dt.weekday

df['Order Number'] = df['Order Number'].astype(int)


#df.sort_values(by = ['Year', 'Month','Day','Hour','Minute'], ascending = [True, True, True,True, True])
df = df.sort_values(by=['Order Number'],ascending = True)

"""##Train the model based on each hour"""

df2 = df.groupby(['Year','Month','Day','Hour','Item Id'])['Quantity'].sum()
df2 = df2.reset_index()
#train the data based on year, month, day, hour and Item Id

# Preprocess the data and extract features and labels
X = df2[['Item Id', 'Hour', 'Day', 'Month','Year']]
y = df2['Quantity']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Random Forest Regressor
random_forest = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the Random Forest model
random_forest.fit(X_train, y_train)

# Make predictions on the test set
y_pred = random_forest.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test,y_pred)


row1 = df2.iloc[100][:5]


input_1 = [[3,21,23,12,2017],[2,21,23,12,2018],[5,21,23,12,2017],[0,21,23,12,2019],[3,21,23,12,2017]] #[Item Id,Hour,Day,Month,Year]
output = random_forest.predict(input_1)
print(output)
# for i in output:
#    print(int(i))

